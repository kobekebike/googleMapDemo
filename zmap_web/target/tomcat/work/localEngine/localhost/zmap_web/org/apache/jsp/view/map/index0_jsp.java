package org.apache.jsp.view.map;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLDecoder;

public final class index0_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.AnnotationProcessor _jsp_annotationprocessor;

  public Object getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_annotationprocessor = (org.apache.AnnotationProcessor) getServletConfig().getServletContext().getAttribute(org.apache.AnnotationProcessor.class.getName());
  }

  public void _jspDestroy() {
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    String ctxPathName = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<html>\r\n");
      out.write("<!-- <script src=\"http://ditu.google.cn/maps?file=api&v=3&key=AIzaSyBrRBLVg_bH4N0eADAxzPOKCpxi28C_0VQ&sensor=false\" type=\"text/javascript\"></script>\r\n");
      out.write(" -->\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>谷歌地图演示实例</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(ctxPathName );
      out.write("/js/jquery-easyui/themes/bootstrap/easyui.css\">\r\n");
      out.write("<script src=\"http://maps.google.cn/maps/api/js?language=zh-TW&v=3.exp&key=AIzaSyCoy86qvSNN4A1nEA5Kg-jVdNNjjyVbyFI&libraries=places,drawing,geometry\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"");
      out.print(ctxPathName );
      out.write("/js/jquery-2.1.3.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"");
      out.print(ctxPathName );
      out.write("/js/jquery-easyui/jquery.easyui.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"");
      out.print(ctxPathName );
      out.write("/js/jquery-easyui/extension/edatagrid/jquery.edatagrid.js\" type=\"text/javascript\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div  class=\"easyui-layout\" data-options=\"fit:true\">   \r\n");
      out.write("\t    <div data-options=\"region:'west',split:true,minWidth:180\" style=\"width:400px;\">\r\n");
      out.write("\t    \t<div  class=\"easyui-accordion\" data-options=\"fit:true,border:false\" >   \r\n");
      out.write("\t\t\t    <div title=\"實例1：地址搜索\" data-options=\"\" >   \r\n");
      out.write("\t\t\t    \t <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-12\" >\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" id=\"autocomplete\" style=\"width:100%\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\" >\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-12\" >\r\n");
      out.write("\t\t\t\t\t\t\t&nbsp;&nbsp;纬度：<input class=\"field\"\r\n");
      out.write("              id=\"latAutoFill\" disabled=\"true\"></input></td>\r\n");
      out.write("        <td class=\"label\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\" >\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-12\" >\r\n");
      out.write("\t\t\t\t\t\t\t&nbsp;&nbsp;经度：<input class=\"field\"\r\n");
      out.write("              id=\"lngAutoFill\" disabled=\"true\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("<!-- \r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\" >\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-4\" >\r\n");
      out.write("\t\t\t\t\t\t\tZip code\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-8\" >\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"field\" id=\"postal_code\"\r\n");
      out.write("              disabled=\"true\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\" >\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-4\" >\r\n");
      out.write("\t\t\t\t\t\t\troom\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-8\" >\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"field\" id=\"room\"\r\n");
      out.write("              disabled=\"true\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\" >\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-4\" >\r\n");
      out.write("\t\t\t\t\t\t\tfloor\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-8\" >\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"field\" id=\"floor\"\r\n");
      out.write("              disabled=\"true\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write(" \t\t\t\t\t</div>\r\n");
      out.write("\t\t\t-->\t\t\r\n");
      out.write("\t\t\t    </div>   \r\n");
      out.write("\t\t\t    <div title=\"實例2：選區設置\"  >   \r\n");
      out.write("\t\t\t        <table id=\"areadg\"></table>     \r\n");
      out.write("\t\t\t    </div>   \r\n");
      out.write("\t\t\t    <div title=\"實例3：地址和地理座標轉換\">   \r\n");
      out.write("\t\t\t        <div class=\"form-group\" >\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-4\" >\r\n");
      out.write("\t\t\t\t\t\t\t地址\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-8\" >\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"address\" name=\"address\" placeholder=\"請輸入地址\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-bottom\">\r\n");
      out.write("\t\t\t\t\t<button class=\"btn btn-form headBtn determine\" id=\"submitId\" margin-right: 10px;\">地理編碼</button>\r\n");
      out.write("\t\t\t\t\t<span id=\"lngDetail\">經緯度詳細信息：</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\" >\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-4\" >\r\n");
      out.write("\t\t\t\t\t\t\t經度\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-8\" >\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"lng\" name=\"lng\" placeholder=\"请输入經度\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\" >\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-4\" >\r\n");
      out.write("\t\t\t\t\t\t\t緯度\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-8\" >\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"lat\" name=\"lat\" placeholder=\"请输入緯度\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-bottom\">\r\n");
      out.write("\t\t\t\t\t<button class=\"btn btn-form headBtn determine\" id=\"submitId1\" margin-right: 10px;\">反向地理編碼</button>\r\n");
      out.write("\t\t\t\t\t<span id=\"addressDetail\">地址詳細信息：</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t    </div>  \r\n");
      out.write("\t\t\t    <div title=\"實例4:用戶數據\">   \r\n");
      out.write("\t\t\t        <table id=\"userdg\"></table>  \r\n");
      out.write("\t\t\t    </div> \r\n");
      out.write("\t\t\t</div>  \r\n");
      out.write("\t    </div>   \r\n");
      out.write("\t    <div data-options=\"region:'center'\" id=\"map\" >\r\n");
      out.write("\t    </div>   \r\n");
      out.write("\t</div>  \r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var map = null;\r\n");
      out.write("var lat = 22.28218;  \r\n");
      out.write("var lng = 114.1577;  \r\n");
      out.write("$(function(){\r\n");
      out.write("\t$.messager.progress({\r\n");
      out.write("\t\ttitle:\"地圖加載中...\"\r\n");
      out.write("\t});\r\n");
      out.write("\tvar mapProp = {\r\n");
      out.write("\t  center:new google.maps.LatLng(lat, lng),\r\n");
      out.write("\t  zoom:18,\r\n");
      out.write("\t  mapTypeId:google.maps.MapTypeId.ROADMAP,\r\n");
      out.write("\t  disableDefaultUI: true\r\n");
      out.write("\t  };\r\n");
      out.write("\tmap=new google.maps.Map(document.getElementById(\"map\"),mapProp);\r\n");
      out.write("\t\r\n");
      out.write("\t// 初始化定义两个多边形点集合，用于默认展示。\r\n");
      out.write("\t  var triangleCoords = [\r\n");
      out.write("\t      {lat: 22.28158, lng: 114.1559},\r\n");
      out.write("\t      {lat: 22.28232, lng: 114.1554},\r\n");
      out.write("\t      {lat: 22.28248, lng: 114.1547}\r\n");
      out.write("\t  ];\r\n");
      out.write("\t  var triangleCoords1 = [\r\n");
      out.write("  \t      {lat: 22.28128, lng: 114.1567},\r\n");
      out.write("  \t      {lat: 22.28158, lng: 114.1567},\r\n");
      out.write("  \t      {lat: 22.28218, lng: 114.1577},\r\n");
      out.write("  \t      {lat: 22.28228, lng: 114.1587}\r\n");
      out.write("  \t  ];\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t  // 构建两个多边形\r\n");
      out.write("\t  var bermudaTriangle = new google.maps.Polygon({\r\n");
      out.write("\t    paths: triangleCoords,\r\n");
      out.write("\t    strokeColor: '#0088cc',\r\n");
      out.write("\t    strokeOpacity: 0.8,\r\n");
      out.write("\t    strokeWeight: 3,\r\n");
      out.write("\t    fillColor: '#0088cc',\r\n");
      out.write("\t    fillOpacity: 0.35,\r\n");
      out.write("\t    areaname:'区域C',\r\n");
      out.write("\t    areaid:'123'\r\n");
      out.write("\t  });\r\n");
      out.write("\t  var bermudaTriangle1 = new google.maps.Polygon({\r\n");
      out.write("\t\t    paths: triangleCoords1,\r\n");
      out.write("\t\t    strokeColor: '#ff6161',\r\n");
      out.write("\t\t    strokeOpacity: 0.8,\r\n");
      out.write("\t\t    strokeWeight: 3,\r\n");
      out.write("\t\t    fillColor: '#ff6161',\r\n");
      out.write("\t\t    fillOpacity: 0.35,\r\n");
      out.write("\t\t    areaname:'区域B',\r\n");
      out.write("\t\t\tareaid:'456'\r\n");
      out.write("\t\t  });\r\n");
      out.write("\t  //默认在地图上展示\r\n");
      out.write("\t  bermudaTriangle.setMap(map);\r\n");
      out.write("\t  bermudaTriangle1.setMap(map);\r\n");
      out.write("\t  // Add a listener for the click event.点击之后显示多边形点信息\r\n");
      out.write("\t  bermudaTriangle.addListener('click', showArrays);\r\n");
      out.write("\t  bermudaTriangle1.addListener('click', showArrays);\r\n");
      out.write("\t  infoWindow = new google.maps.InfoWindow;\r\n");
      out.write("\t  initAutocomplete();\r\n");
      out.write("\t\r\n");
      out.write("    genuserdata();\r\n");
      out.write("\t$('#userdg').datagrid({    \r\n");
      out.write("\t    data:userData,    \r\n");
      out.write("\t    fit:true,\r\n");
      out.write("\t    rownumbers:true,\r\n");
      out.write("\t    border:false,\r\n");
      out.write("\t    columns:[[    \r\n");
      out.write("\t        {field:'name',title:'姓名',width:60},    \r\n");
      out.write("\t        {field:'area',title:'選區',width:40},    \r\n");
      out.write("\t        {field:'lat',title:'維度',width:70}, \r\n");
      out.write("\t        {field:'lng',title:'經度',width:70}, \r\n");
      out.write("\t        {field:'xianshi',title:'顯示',width:20,formatter:function(value,row,index){\r\n");
      out.write("\t        \treturn '<input type=\"checkbox\" onchange=\"showOrHidemarker(this,'+index+')\">' ;\r\n");
      out.write("\t        }}, \r\n");
      out.write("\t    ]]    \r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tgenareadata();\r\n");
      out.write("\t$('#areadg').edatagrid({    \r\n");
      out.write("\t    data:areaData,    \r\n");
      out.write("\t    fit:true,\r\n");
      out.write("\t    border:false,\r\n");
      out.write("\t    rownumbers:true,\r\n");
      out.write("\t    columns:[[    \r\n");
      out.write("\t        {field:'area',title:'選區',width:80, editor:'text'},    \r\n");
      out.write("\t        {field:'color',title:'顏色',width:80, editor:'text'},\r\n");
      out.write("\t        {field:'xianshi',title:'顯示',width:40,formatter:function(value,row,index){\r\n");
      out.write("\t        \treturn '<input type=\"checkbox\" id=\"xianshi'+index+'\" onchange=\"showOrHidepolygon(this,'+index+')\">' ;\r\n");
      out.write("\t        }}, \r\n");
      out.write("\t        {field:'huaquyu',title:'畫區域',width:60,formatter:function(value,row,index){\r\n");
      out.write("\t        \treturn '<input type=\"checkbox\" targetxianshiId=\"xianshi'+index+'\" name=\"huaquyu\" onchange=\"showOrHidedrawingManager(this,'+index+')\">' ;\r\n");
      out.write("\t        }}, \r\n");
      out.write("\t    ]]    \r\n");
      out.write("\t});\r\n");
      out.write("\t$.messager.progress(\"close\");\r\n");
      out.write("\t$(\"#submitId\").click(function(){\r\n");
      out.write("\t\tvar address = $(\"#address\").val();\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\t   type: \"POST\",\r\n");
      out.write("\t\t\t   url: \"${cxt!}/m/hello/map/ajaxLatLngByAddress\" ,\r\n");
      out.write("\t\t\t   data:{\"address\":address},\r\n");
      out.write("\t\t\t   success: function(data){\r\n");
      out.write("\t\t\t\t   $(\"#lngDetail\").html(data.data);\r\n");
      out.write("\t\t\t   }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("\t$(\"#submitId1\").click(function(){\r\n");
      out.write("\t\tvar lng = $(\"#lng\").val();\r\n");
      out.write("\t\tvar lat = $(\"#lat\").val();\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\t   type: \"POST\",\r\n");
      out.write("\t\t\t   url: \"${cxt!}/m/hello/map/ajaxAddressByLatLng\" ,\r\n");
      out.write("\t\t\t   data:{\"lng\":lng,\"lat\":lat},\r\n");
      out.write("\t\t\t   success: function(data){\r\n");
      out.write("\t\t\t\t   $(\"#addressDetail\").html(data.data);\r\n");
      out.write("\t\t\t   }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var userData = [];\r\n");
      out.write("function genuserdata() {\r\n");
      out.write("\tvar firstname=[\"李\",\"西门\",\"沈\",\"张\",\"上官\",\"司徒\",\"欧阳\",\"轩辕\",\"林\",\"劉\"];\r\n");
      out.write("    var nameq=[\"彪\",\"巨昆\",\"锐\",\"翠花\",\"小小\",\"撒撒\",\"熊大\",\"宝强\",\"春花\",\"秋月\",\"夏日\",\"冬天\"];\r\n");
      out.write("\tfor(var i = 0;i<1000;i++) {\r\n");
      out.write("\t\tvar xingxing = firstname[Math.floor(Math.random() * (firstname.length))];\r\n");
      out.write("        var mingming = nameq[Math.floor(Math.random() * (nameq.length))];\r\n");
      out.write("        var xingming = xingxing+mingming;\r\n");
      out.write("        var data = {\r\n");
      out.write("    \t\t\tname:xingming,\r\n");
      out.write("    \t\t\tcode:\"會員\"+(i+1),\r\n");
      out.write("    \t\t\tlng:lng + (0.01 * (Math.random()*2 -1)),\r\n");
      out.write("    \t\t\tlat:lat + (0.01 * (Math.random()*2 -1))\r\n");
      out.write("    \t\t};\r\n");
      out.write("\t\tvar marker = new google.maps.Marker({\r\n");
      out.write("\t\t    position: {lat: data.lat, lng:  data.lng},\r\n");
      out.write("\t\t    title: data.name,\r\n");
      out.write("\t\t    icon:'${cxt!}/ui/easyui/themes/icons/man.png',\r\n");
      out.write("\t\t    map:map\r\n");
      out.write("\t\t  });\r\n");
      out.write("\t\tdata.marker=marker;\r\n");
      out.write("\t\tuserData.push(data);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("var areaData = [];\r\n");
      out.write("function genareadata() {\r\n");
      out.write("\tareaData.push({\r\n");
      out.write("\t\tarea:\"選區A\",\r\n");
      out.write("\t\tcolor:\"#70c24a\"\r\n");
      out.write("\t});\r\n");
      out.write("\tareaData.push({\r\n");
      out.write("\t\tarea:\"選區B\",\r\n");
      out.write("\t\tcolor:\"#ff6161\"\r\n");
      out.write("\t});\r\n");
      out.write("\tareaData.push({\r\n");
      out.write("\t\tarea:\"選區C\",\r\n");
      out.write("\t\tcolor:\"#0088cc\"\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function showOrHidemarker(thisObj,index){\r\n");
      out.write("\tif(thisObj.checked) {\r\n");
      out.write("\t\tuserData[index].marker.setMap(map);\r\n");
      out.write("\t}else {\r\n");
      out.write("\t\tuserData[index].marker.setMap(null);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showOrHidepolygon(thisObj,index){\r\n");
      out.write("\tif(areaData[index].polygon) {\r\n");
      out.write("\t\t$.each(areaData[index].polygon,function(){\r\n");
      out.write("\t\t\tif(thisObj.checked) {\r\n");
      out.write("\t\t\t\tthis.setMap(map);\r\n");
      out.write("\t\t\t}else {\r\n");
      out.write("\t\t\t\tthis.setMap(null);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showOrHidedrawingManager(thisObj,index){\r\n");
      out.write("\tif(!areaData[index].drawingManager) {\r\n");
      out.write("\t\tvar drawingManager = new google.maps.drawing.DrawingManager({\r\n");
      out.write("\t\t    drawingMode: google.maps.drawing.OverlayType.POLYGON,\r\n");
      out.write("\t\t    drawingControl: false,\r\n");
      out.write("\t\t    editable : true,\r\n");
      out.write("\t\t    drawingControlOptions: {\r\n");
      out.write("\t\t      position: google.maps.ControlPosition.TOP_CENTER,\r\n");
      out.write("\t\t      drawingModes: [\r\n");
      out.write("\t\t        google.maps.drawing.OverlayType.POLYGON,\r\n");
      out.write("\t\t      ]\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    polygonOptions: {\r\n");
      out.write("\t\t      fillColor: areaData[index].color,\r\n");
      out.write("\t\t      fillOpacity: 0.5,//填充透明度\r\n");
      out.write("\t\t      strokeColor:areaData[index].color,\r\n");
      out.write("\t\t      strokeWeight: 2,\r\n");
      out.write("\t\t      editable: true,\r\n");
      out.write("\t\t      zIndex: 1\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  });\r\n");
      out.write("\t\t  drawingManager.setMap(map);\r\n");
      out.write("\t\t  areaData[index].drawingManager = drawingManager;\r\n");
      out.write("\t\t  google.maps.event.addListener(drawingManager, 'polygoncomplete', function(polygon) {\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  if(!areaData[index].polygon) {\r\n");
      out.write("\t\t\t\t  areaData[index].polygon = [];\r\n");
      out.write("\t\t\t  }\r\n");
      out.write("\t\t\t  //环球大厦地理坐标\r\n");
      out.write("\t\t\t  var coordinate = new google.maps.LatLng(22.28255,114.1577184);  \r\n");
      out.write("\t\t      \r\n");
      out.write("\t\t\t  areaData[index].polygon.push(polygon);\r\n");
      out.write("\t\t\t  polygon.addListener('click', showpolygoninfo);\r\n");
      out.write("\t\t\t  polygon.areaname = areaData[index].area\r\n");
      out.write("\t\t\t  polygon.areaid = (new Date()).getTime();\r\n");
      out.write("\t\t\t  var isWithinPolygon = google.maps.geometry.poly.containsLocation(coordinate, polygon)\r\n");
      out.write("\t\t      alert(\"判断环球大厦是否在多边形中LatLng(22.28255,114.1577184)---环球大厦-------------\"+isWithinPolygon);\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  var vertices = polygon.getPath();//Retrieves the first path.\r\n");
      out.write("\t\t\t  polygon.getPaths();//Retrieves the paths for this polygon.  这里很奇怪，getPaths结果只有一个值。\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t  for (var i =0; i < vertices.getLength(); i++) {\r\n");
      out.write("\t\t\t    var xy = vertices.getAt(i);\r\n");
      out.write("\t\t\t    //alert(\"循环多边形的每个节点---经度--\"+xy.lng()+\"纬度----\"+xy.lat());\r\n");
      out.write("\t\t\t  }\r\n");
      out.write("\t\t\t  // Replace the info window's content and position.\r\n");
      out.write("\t\t\t  //infoWindow.setContent(contentString);\r\n");
      out.write("\t\t\t  //infoWindow.setPosition(polygon.latLng);\r\n");
      out.write("\r\n");
      out.write("\t\t\t // infoWindow.open(map);\r\n");
      out.write("\t\t      \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t  /*\r\n");
      out.write("\t\t\tgoogle.maps.event.addListener(drawingManager, 'polygoncomplete', showArrays);\r\n");
      out.write("\t\t  */\r\n");
      out.write("\t\t  \r\n");
      out.write("\t}\r\n");
      out.write("\tif(thisObj.checked) {\r\n");
      out.write("\t\tareaData[index].drawingManager.setMap(map);\r\n");
      out.write("\t\t$(\"#\"+$(thisObj).attr(\"targetxianshiId\"))[0].checked = true;\r\n");
      out.write("\t}else {\r\n");
      out.write("\t\tareaData[index].drawingManager.setMap(null);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showpolygoninfo(event,areaname) {\r\n");
      out.write("\tinfoWindow = null;\r\n");
      out.write("\tif(this.infoWindow) {\r\n");
      out.write("\t\tinfoWindow = this.infoWindow;\r\n");
      out.write("\t}else {\r\n");
      out.write("\t\tinfoWindow = new google.maps.InfoWindow;\r\n");
      out.write("\t\tthis.infoWindow = infoWindow;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tconsole.log(this);\t\r\n");
      out.write("\tvar vertices = this.getPath();\r\n");
      out.write("\tvar thisobj = this;\r\n");
      out.write("\t  var contentString = '<b>所屬選區：'+this.areaname+'</b><a href=\"javascript:void(0)\" onclick=\"deleteArea(\\''+this.areaid +'\\')\">刪除</a><br>' +\r\n");
      out.write("\t      '<b>擁有會員： </b> <br>';\r\n");
      out.write("\t  \r\n");
      out.write("\t  // Iterate over the vertices.\r\n");
      out.write("\t \t$.each(userData,function(){\r\n");
      out.write("\t \t\tif(google.maps.geometry.poly.containsLocation(this.marker.position, thisobj)) {\r\n");
      out.write("\t \t\t\tcontentString += \"&nbsp;&nbsp;\" + this.name\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t \t})\r\n");
      out.write("\r\n");
      out.write("\t  // Replace the info window's content and position.\r\n");
      out.write("\t  infoWindow.setContent(contentString);\r\n");
      out.write("\t  infoWindow.setPosition(event.latLng);\r\n");
      out.write("\r\n");
      out.write("\t  infoWindow.open(map);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function deleteArea(_id){\r\n");
      out.write("\t$.each(areaData,function(){\r\n");
      out.write("\t\tvar thisobj = this;\r\n");
      out.write("\t\tvar polygons = this.polygon;\r\n");
      out.write(" \t\tif(polygons) {\r\n");
      out.write(" \t\t\t$.each(polygons,function(i){\r\n");
      out.write(" \t\t\t\tif(this.areaid == _id) {\r\n");
      out.write(" \t\t\t\t\tArray.remove(polygons,i);\r\n");
      out.write(" \t\t\t\t\tthis.setMap(null);\r\n");
      out.write(" \t\t\t\t\tif(this.infoWindow) {\r\n");
      out.write(" \t\t\t\t\t\tthis.infoWindow.setMap(null);\r\n");
      out.write(" \t\t\t\t\t}\r\n");
      out.write(" \t\t\t\t\treturn false;\r\n");
      out.write(" \t\t\t\t}\r\n");
      out.write(" \t\t\t}) \r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t})\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("Array.remove = function(array, from, to) {  \r\n");
      out.write("\t  var rest = array.slice((to || from) + 1 || array.length);  \r\n");
      out.write("\t  array.length = from < 0 ? array.length + from : from;  \r\n");
      out.write("\t  return array.push.apply(array, rest);  \r\n");
      out.write("\t};  \r\n");
      out.write("\r\n");
      out.write("var placeSearch, autocomplete;\r\n");
      out.write("/*\r\n");
      out.write("var componentForm = {\r\n");
      out.write("  street_number: 'short_name',\r\n");
      out.write("  route: 'long_name',\r\n");
      out.write("  locality: 'long_name',\r\n");
      out.write("  administrative_area_level_1: 'short_name',\r\n");
      out.write("  country: 'long_name',\r\n");
      out.write("  postal_code: 'short_name',\r\n");
      out.write("  room: 'room',\r\n");
      out.write("  floor: 'floor'\t\r\n");
      out.write("};\r\n");
      out.write("function initAutocomplete() {\r\n");
      out.write("  // Create the autocomplete object, restricting the search to geographical\r\n");
      out.write("  // location types.\r\n");
      out.write("  autocomplete = new google.maps.places.Autocomplete(\r\n");
      out.write("      (document.getElementById('autocomplete')),\r\n");
      out.write("      {types: ['geocode']});\r\n");
      out.write("\r\n");
      out.write("  // When the user selects an address from the dropdown, populate the address\r\n");
      out.write("  // fields in the form.\r\n");
      out.write("  autocomplete.addListener('place_changed', fillInAddress);\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("// [START region_fillform]\r\n");
      out.write("function fillInAddress() {\r\n");
      out.write("  // Get the place details from the autocomplete object.\r\n");
      out.write("  var place = autocomplete.getPlace();\r\n");
      out.write("\r\n");
      out.write("  for (var component in componentForm) {\r\n");
      out.write("    document.getElementById(component).value = '';\r\n");
      out.write("    document.getElementById(component).disabled = false;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  // Get each component of the address from the place details\r\n");
      out.write("  // and fill the corresponding field on the form.\r\n");
      out.write("  for (var i = 0; i < place.address_components.length; i++) {\r\n");
      out.write("    var addressType = place.address_components[i].types[0];\r\n");
      out.write("    if (componentForm[addressType]) {\r\n");
      out.write("      var val = place.address_components[i][componentForm[addressType]];\r\n");
      out.write("      document.getElementById(addressType).value = val;\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("*/\r\n");
      out.write("// [END region_fillform]\r\n");
      out.write("\r\n");
      out.write("// [START region_geolocation]\r\n");
      out.write("// Bias the autocomplete object to the user's geographical location,\r\n");
      out.write("// as supplied by the browser's 'navigator.geolocation' object.\r\n");
      out.write("function geolocate() {\r\n");
      out.write("  if (navigator.geolocation) {\r\n");
      out.write("    navigator.geolocation.getCurrentPosition(function(position) {\r\n");
      out.write("      var geolocation = {\r\n");
      out.write("        lat: position.coords.latitude,\r\n");
      out.write("        lng: position.coords.longitude\r\n");
      out.write("      };\r\n");
      out.write("      var circle = new google.maps.Circle({\r\n");
      out.write("        center: geolocation,\r\n");
      out.write("        radius: position.coords.accuracy\r\n");
      out.write("      });\r\n");
      out.write("      autocomplete.setBounds(circle.getBounds());\r\n");
      out.write("    });\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("// [END region_geolocation]\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// This example adds a search box to a map, using the Google Place Autocomplete\r\n");
      out.write("// feature. People can enter geographical searches. The search box will return a\r\n");
      out.write("// pick list containing a mix of places and predicted search terms.\r\n");
      out.write("\r\n");
      out.write("// This example adds a search box to a map, using the Google Place Autocomplete\r\n");
      out.write("// feature. People can enter geographical searches. The search box will return a\r\n");
      out.write("// pick list containing a mix of places and predicted search terms.\r\n");
      out.write("\r\n");
      out.write("function initAutocomplete() {\r\n");
      out.write("  // Create the search box and link it to the UI element.\r\n");
      out.write("  var input = document.getElementById('autocomplete');\r\n");
      out.write("  var searchBox = new google.maps.places.SearchBox(input);\r\n");
      out.write("  //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\r\n");
      out.write("\r\n");
      out.write("  // Bias the SearchBox results towards current map's viewport.\r\n");
      out.write("  map.addListener('bounds_changed', function() {\r\n");
      out.write("    searchBox.setBounds(map.getBounds());\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  var markers = [];\r\n");
      out.write("  // Listen for the event fired when the user selects a prediction and retrieve\r\n");
      out.write("  // more details for that place.\r\n");
      out.write("  searchBox.addListener('places_changed', function() {\r\n");
      out.write("    var places = searchBox.getPlaces();\r\n");
      out.write("\r\n");
      out.write("    if (places.length == 0) {\r\n");
      out.write("      return;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Clear out the old markers.\r\n");
      out.write("    markers.forEach(function(marker) {\r\n");
      out.write("      marker.setMap(null);\r\n");
      out.write("    });\r\n");
      out.write("    markers = [];\r\n");
      out.write("\r\n");
      out.write("    // For each place, get the icon, name and location.\r\n");
      out.write("    var bounds = new google.maps.LatLngBounds();\r\n");
      out.write("    places.forEach(function(place) {\r\n");
      out.write("      var icon = {\r\n");
      out.write("        url: '${cxt!}/ui/easyui/themes/icons/maps.png',\r\n");
      out.write("        size: new google.maps.Size(100, 100),\r\n");
      out.write("        origin: new google.maps.Point(0, 0),\r\n");
      out.write("        anchor: new google.maps.Point(17, 34),\r\n");
      out.write("        scaledSize: new google.maps.Size(50, 50)\r\n");
      out.write("      };\r\n");
      out.write("\r\n");
      out.write("      // Create a marker for each place.\r\n");
      out.write("      markers.push(new google.maps.Marker({\r\n");
      out.write("        map: map,\r\n");
      out.write("        icon: icon,\r\n");
      out.write("        title: place.name,\r\n");
      out.write("        position: place.geometry.location\r\n");
      out.write("      }));\r\n");
      out.write("\r\n");
      out.write("      if (place.geometry.viewport) {\r\n");
      out.write("        // Only geocodes have viewport.\r\n");
      out.write("        bounds.union(place.geometry.viewport);\r\n");
      out.write("      } else {\r\n");
      out.write("        bounds.extend(place.geometry.location);\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      //alert(place.formatted_address+\"地图对应的idplace_id-----\"+place.place_id);\r\n");
      out.write("      //alert(place.formatted_address+\"的纬度---\"+place.geometry.location.lat()+\"经度-----\"+place.geometry.location.lng());\r\n");
      out.write("      $(\"#latAutoFill\").val(place.geometry.location.lat());\r\n");
      out.write("      $(\"#lngAutoFill\").val(place.geometry.location.lng());\r\n");
      out.write("    });\r\n");
      out.write("    map.fitBounds(bounds);\r\n");
      out.write("    map.setZoom(18);\r\n");
      out.write("  });\r\n");
      out.write("}\r\n");
      out.write("//展示多边行的所有节点\r\n");
      out.write("function showArrays(event) {\r\n");
      out.write("\t  // Since this polygon has only one path, we can call getPath() to return the\r\n");
      out.write("\t  // MVCArray of LatLngs.\r\n");
      out.write("\t  var vertices = this.getPath();\r\n");
      out.write("\r\n");
      out.write("\t  var contentString = '<b>Bermuda Triangle polygon</b><br>' +\r\n");
      out.write("\t      'Clicked location: <br>' + event.latLng.lat() + ',' + event.latLng.lng() +\r\n");
      out.write("\t      '<br>';\r\n");
      out.write("\r\n");
      out.write("\t  // Iterate over the vertices.\r\n");
      out.write("\t  for (var i =0; i < vertices.getLength(); i++) {\r\n");
      out.write("\t    var xy = vertices.getAt(i);\r\n");
      out.write("\t    contentString += '<br>' + 'Coordinate ' + i + ':<br>' + xy.lat() + ',' +\r\n");
      out.write("\t        xy.lng();\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("\t  // Replace the info window's content and position.\r\n");
      out.write("\t  infoWindow.setContent(contentString);\r\n");
      out.write("\t  infoWindow.setPosition(event.latLng);\r\n");
      out.write("\r\n");
      out.write("\t  infoWindow.open(map);\r\n");
      out.write("\t}\r\n");
      out.write("// //展示多边行的所有节点\r\n");
      out.write("// function showArrays(event) {\r\n");
      out.write("\t\r\n");
      out.write("// \t  // Since this polygon has only one path, we can call getPath() to return the\r\n");
      out.write("// \t  // MVCArray of LatLngs.\r\n");
      out.write("// \t  var vertices = this.getPath();\r\n");
      out.write("\r\n");
      out.write("// \t  var contentString = '<b>多边形节点信息</b><br>' +\r\n");
      out.write("// \t      '当前点击位置信息: <br>' + event.latLng.lat() + ',' + event.latLng.lng() +\r\n");
      out.write("// \t      '<br>';\r\n");
      out.write("\r\n");
      out.write("// \t  // Iterate over the vertices.\r\n");
      out.write("// \t  for (var i =0; i < vertices.getLength(); i++) {\r\n");
      out.write("// \t    var xy = vertices.getAt(i);\r\n");
      out.write("// \t    contentString += '<br>' + '多边形状各节点信息 ' + i + ':<br>' + xy.lat() + ',' +\r\n");
      out.write("// \t        xy.lng();\r\n");
      out.write("// \t  }\r\n");
      out.write("\r\n");
      out.write("// \t  // Replace the info window's content and position.\r\n");
      out.write("// \t  infoWindow.setContent(contentString);\r\n");
      out.write("// \t  infoWindow.setPosition(event.latLng);\r\n");
      out.write("\r\n");
      out.write("// \t  infoWindow.open(map);\r\n");
      out.write("// \t}\t\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
