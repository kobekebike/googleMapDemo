<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.dao.ElectoralAreaMapper" >
  <resultMap id="BaseResultMap" type="com.test.model.ElectoralArea" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="area_year" property="areaYear" jdbcType="VARCHAR" />
    <result column="fill_color" property="fillColor" jdbcType="VARCHAR" />
    <result column="node_ids" property="nodeIds" jdbcType="VARCHAR" />
    <result column="stroke_color" property="strokeColor" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="VARCHAR" />
    <result column="create_name" property="createName" jdbcType="VARCHAR" />
    <result column="area_name" property="areaName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, area_year, fill_color, node_ids, stroke_color, create_time, create_id, create_name, 
    area_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.test.model.ElectoralAreaCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from electoral_area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
      <if test=" limitEnd > 0" >
        limit #{limitStart} , #{limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from electoral_area
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from electoral_area
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.test.model.ElectoralAreaCriteria" >
    delete from electoral_area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.test.model.ElectoralArea" useGeneratedKeys="true" keyProperty="id" >
    insert into electoral_area (id, area_year, fill_color, 
      node_ids, stroke_color, create_time, 
      create_id, create_name, area_name
      )
    values (#{id,jdbcType=INTEGER}, #{areaYear,jdbcType=VARCHAR}, #{fillColor,jdbcType=VARCHAR}, 
      #{nodeIds,jdbcType=VARCHAR}, #{strokeColor,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createId,jdbcType=VARCHAR}, #{createName,jdbcType=VARCHAR}, #{areaName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.test.model.ElectoralArea" useGeneratedKeys="true" keyProperty="id" >
    insert into electoral_area
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="areaYear != null" >
        area_year,
      </if>
      <if test="fillColor != null" >
        fill_color,
      </if>
      <if test="nodeIds != null" >
        node_ids,
      </if>
      <if test="strokeColor != null" >
        stroke_color,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createName != null" >
        create_name,
      </if>
      <if test="areaName != null" >
        area_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="areaYear != null" >
        #{areaYear,jdbcType=VARCHAR},
      </if>
      <if test="fillColor != null" >
        #{fillColor,jdbcType=VARCHAR},
      </if>
      <if test="nodeIds != null" >
        #{nodeIds,jdbcType=VARCHAR},
      </if>
      <if test="strokeColor != null" >
        #{strokeColor,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createName != null" >
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null" >
        #{areaName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.test.model.ElectoralAreaCriteria" resultType="java.lang.Integer" >
    select count(*) from electoral_area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update electoral_area
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.areaYear != null" >
        area_year = #{record.areaYear,jdbcType=VARCHAR},
      </if>
      <if test="record.fillColor != null" >
        fill_color = #{record.fillColor,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeIds != null" >
        node_ids = #{record.nodeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.strokeColor != null" >
        stroke_color = #{record.strokeColor,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=VARCHAR},
      </if>
      <if test="record.createName != null" >
        create_name = #{record.createName,jdbcType=VARCHAR},
      </if>
      <if test="record.areaName != null" >
        area_name = #{record.areaName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update electoral_area
    set id = #{record.id,jdbcType=INTEGER},
      area_year = #{record.areaYear,jdbcType=VARCHAR},
      fill_color = #{record.fillColor,jdbcType=VARCHAR},
      node_ids = #{record.nodeIds,jdbcType=VARCHAR},
      stroke_color = #{record.strokeColor,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_id = #{record.createId,jdbcType=VARCHAR},
      create_name = #{record.createName,jdbcType=VARCHAR},
      area_name = #{record.areaName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.model.ElectoralArea" >
    update electoral_area
    <set >
      <if test="areaYear != null" >
        area_year = #{areaYear,jdbcType=VARCHAR},
      </if>
      <if test="fillColor != null" >
        fill_color = #{fillColor,jdbcType=VARCHAR},
      </if>
      <if test="nodeIds != null" >
        node_ids = #{nodeIds,jdbcType=VARCHAR},
      </if>
      <if test="strokeColor != null" >
        stroke_color = #{strokeColor,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createName != null" >
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null" >
        area_name = #{areaName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.model.ElectoralArea" >
    update electoral_area
    set area_year = #{areaYear,jdbcType=VARCHAR},
      fill_color = #{fillColor,jdbcType=VARCHAR},
      node_ids = #{nodeIds,jdbcType=VARCHAR},
      stroke_color = #{strokeColor,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=VARCHAR},
      create_name = #{createName,jdbcType=VARCHAR},
      area_name = #{areaName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>